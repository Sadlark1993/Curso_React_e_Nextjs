//create an account on elephantsql.com
//create an account on strapi
//create an account on cloudinary


npx create-strapi-app .
//use custom install, insert the right datas from elephantsql.com

/*
  in ./config/database are de datas of your BD. Replace the values for random
  values like localhost, root, pass123...

  the true values must be placed in .env document just like this:

  DATABASE_HOST=any.any.com
  DATABASE_PORT=5432
  ...

  in ./config/database, insert pool with min=0 and max=5:

export default ({ env }) => ({
  connection: {
    client: 'postgres',
    connection: {
      host: env('DATABASE_HOST', 'localhost'),
      port: env.int('DATABASE_PORT', 5432),
      database: env('DATABASE_NAME', 'database'),
      user: env('DATABASE_USERNAME', 'hoot'),
      password: env('DATABASE_PASSWORD', ''),
      ssl: env.bool('DATABASE_SSL', false),
    },
    pool: {
      min: 0,
      max: 5,
    }
  },
});

*/

npm run develop

//sign up your admin user datas

//integrate cloudinary to strapi by following the tutorial:
https://github.com/strapi/strapi/tree/master/packages/providers/upload-cloudinary

//I can be forgetting something... if its so, I'm sorry.

//Lesson 2:

//Log on your strapi --> host http://localhost:1337/
//in content-type builder, create a new collection type

//Now, we'll start landing this website on strapi: https://landingpagecursojs.netlify.app/#grid-one

/*
I've started by creating a collection type named pages, and then, adding two fields to this collection,
title [text] and slug [UID]. Click in save.
*/

//create a component called section_metadata. It has title [text], id[text] and background [boolean]
/*created a dynamic zone to the page that has title, description and image, and added the section_metadata
to this component*/

//created component text-grid, that has a title and a description;
//created component image-grid, that has an image;
/*created component section-grid, that has title, description, component text-grid, component image grid
both repeatable*/

/*in content manager, created a new page, and built sections home and grid-two using the
already created components (it's a CMS)
keep doing this till you finish your CMS.
*/

//update .env.exemple: copy the text of .env to .env.exemple, and change the sensible values for 'change-me'.

/*in  settings -> roles & permissions plugin -> roles, I've set the permissions find and find one
for the public role */
//to access the api, jus use the adicional url's path: /api/pages for find or /api/pages/:id for find one.
//you'll need to install a plugin to make the api to be fully populated easily:
npm install strapi-plugin-populate-deep
//the adicional url's path to the populated api: /api/pages?populate=deep
//my full url: http://localhost:1337/api/pages?populate=deep
